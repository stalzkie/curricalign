"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/dataService.ts":
/*!********************************!*\
  !*** ./src/lib/dataService.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchCourseWarnings: () => (/* binding */ fetchCourseWarnings),\n/* harmony export */   fetchInDemandJobs: () => (/* binding */ fetchInDemandJobs),\n/* harmony export */   fetchKPIData: () => (/* binding */ fetchKPIData),\n/* harmony export */   fetchMissingSkills: () => (/* binding */ fetchMissingSkills),\n/* harmony export */   fetchMostInDemandSkills: () => (/* binding */ fetchMostInDemandSkills),\n/* harmony export */   fetchTopMatchingCourses: () => (/* binding */ fetchTopMatchingCourses)\n/* harmony export */ });\n// === TYPES ===\nconst BASE_URL = \"/api/dashboard\";\n// === 1. Most In-Demand Skills ===\nasync function fetchMostInDemandSkills() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/skills\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const rawSkills = await response.json();\n        const frequencyMap = {};\n        for (const entry of rawSkills){\n            if (typeof entry === \"string\") {\n                const skills = entry.split(\",\").map((s)=>s.trim().toLowerCase()).filter(Boolean);\n                for (const skill of skills){\n                    frequencyMap[skill] = (frequencyMap[skill] || 0) + 1;\n                }\n            }\n        }\n        return Object.entries(frequencyMap).filter((param)=>{\n            let [name] = param;\n            return name && name.length > 0;\n        }) // ✅ prevent blank names\n        .map((param)=>{\n            let [name, demand] = param;\n            return {\n                name,\n                demand\n            };\n        }).sort((a, b)=>b.demand - a.demand);\n    } catch (error) {\n        console.error(\"❌ Failed to fetch in-demand skills:\", error);\n        return [];\n    }\n}\n// === 2. Top Matching Courses ===\nasync function fetchTopMatchingCourses() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/top-courses\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data.map((item)=>({\n                courseName: item.courseName || \"Unknown Course\",\n                courseCode: item.courseCode || \"N/A\",\n                matchPercentage: item.matchPercentage || 0\n            })) : [];\n    } catch (error) {\n        console.error(\"❌ Failed to fetch top courses:\", error);\n        return [];\n    }\n}\n// === 3. In-Demand Job Titles ===\nasync function fetchInDemandJobs() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/jobs\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data.map((item)=>({\n                title: item.title || \"Unknown Job\",\n                demand: item.demand || 0\n            })) : [];\n    } catch (error) {\n        console.error(\"❌ Failed to fetch in-demand jobs:\", error);\n        return [];\n    }\n}\n// === 4. Missing Skills ===\nasync function fetchMissingSkills() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/missing-skills\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const rawSkills = await response.json();\n        const uniqueSet = new Set();\n        for (const entry of rawSkills){\n            if (typeof entry === \"string\") {\n                const skills = entry.split(\",\").map((s)=>s.trim().toLowerCase()).filter(Boolean);\n                for (const skill of skills){\n                    uniqueSet.add(skill);\n                }\n            }\n        }\n        return Array.from(uniqueSet).sort();\n    } catch (error) {\n        console.error(\"❌ Failed to fetch missing skills:\", error);\n        return [];\n    }\n}\n// === 5. Course Warnings ===\nasync function fetchCourseWarnings() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/warnings\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data.map((item)=>({\n                courseName: item.courseName || \"Unknown Course\",\n                courseCode: item.courseCode || \"N/A\",\n                matchPercentage: item.matchPercentage || 0\n            })) : [];\n    } catch (error) {\n        console.error(\"❌ Failed to fetch course warnings:\", error);\n        return [];\n    }\n}\n// === 6. KPI Data ===\nasync function fetchKPIData() {\n    try {\n        const response = await fetch(\"\".concat(BASE_URL, \"/kpi\"));\n        if (!response.ok) {\n            const errorText = await response.text();\n            throw new Error(\"API error \".concat(response.status, \": \").concat(errorText));\n        }\n        const data = await response.json();\n        return {\n            averageAlignmentScore: data.averageAlignmentScore || 0,\n            totalSubjectsAnalyzed: data.totalSubjectsAnalyzed || 0,\n            totalJobPostsAnalyzed: data.totalJobPostsAnalyzed || 0,\n            skillsExtracted: data.skillsExtracted || 0\n        };\n    } catch (error) {\n        console.error(\"❌ FastAPI KPI fetch failed:\", error);\n        return {\n            averageAlignmentScore: 0,\n            totalSubjectsAnalyzed: 0,\n            totalJobPostsAnalyzed: 0,\n            skillsExtracted: 0\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/dataService.ts\n"));

/***/ })

});