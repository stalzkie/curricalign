"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_lib_dataService_ts"],{

/***/ "(app-pages-browser)/./src/lib/dataService.ts":
/*!********************************!*\
  !*** ./src/lib/dataService.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchCourseWarnings: () => (/* binding */ fetchCourseWarnings),\n/* harmony export */   fetchInDemandJobs: () => (/* binding */ fetchInDemandJobs),\n/* harmony export */   fetchKPIData: () => (/* binding */ fetchKPIData),\n/* harmony export */   fetchMissingSkills: () => (/* binding */ fetchMissingSkills),\n/* harmony export */   fetchMostInDemandSkills: () => (/* binding */ fetchMostInDemandSkills),\n/* harmony export */   fetchTopCourses: () => (/* binding */ fetchTopCourses),\n/* harmony export */   fetchTopMatchingCourses: () => (/* binding */ fetchTopMatchingCourses),\n/* harmony export */   fetchTopSkills: () => (/* binding */ fetchTopSkills),\n/* harmony export */   getCourseWarnings: () => (/* binding */ getCourseWarnings),\n/* harmony export */   getInDemandJobs: () => (/* binding */ getInDemandJobs),\n/* harmony export */   getMissingSkills: () => (/* binding */ getMissingSkills),\n/* harmony export */   getMostInDemandSkills: () => (/* binding */ getMostInDemandSkills),\n/* harmony export */   getTopCourses: () => (/* binding */ getTopCourses),\n/* harmony export */   getTopMatchingCourses: () => (/* binding */ getTopMatchingCourses),\n/* harmony export */   getTopSkills: () => (/* binding */ getTopSkills),\n/* harmony export */   loadMissingSkills: () => (/* binding */ loadMissingSkills)\n/* harmony export */ });\n// lib/dataService.ts\n// === TYPES ===\nconst BASE_URL = \"/api/dashboard\";\n// ---- Shared fetcher with retry + AbortSignal ----\nasync function fetchJSON(url, init, signal) {\n    let retries = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 3, retryDelay = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 300;\n    for(let attempt = 1; attempt <= retries; attempt++){\n        try {\n            var _init_headers;\n            const res = await fetch(url, {\n                ...init,\n                signal,\n                cache: \"no-store\",\n                headers: {\n                    ...(_init_headers = init === null || init === void 0 ? void 0 : init.headers) !== null && _init_headers !== void 0 ? _init_headers : {},\n                    Accept: \"application/json\"\n                }\n            });\n            if (!res.ok) {\n                const text = await res.text().catch(()=>\"\");\n                throw new Error(\"GET \".concat(url, \" failed: \").concat(res.status, \" \").concat(text));\n            }\n            return res.json();\n        } catch (error) {\n            if (error.name === \"AbortError\") throw error;\n            if (attempt === retries) throw error;\n            await new Promise((res)=>setTimeout(res, retryDelay));\n        }\n    }\n    throw new Error(\"Failed to fetch \".concat(url));\n}\n// === 1. Most In-Demand Skills ===\nasync function fetchMostInDemandSkills(signal) {\n    try {\n        const rawSkills = await fetchJSON(\"\".concat(BASE_URL, \"/skills\"), undefined, signal);\n        return (rawSkills !== null && rawSkills !== void 0 ? rawSkills : []).filter((s)=>(s === null || s === void 0 ? void 0 : s.name) && s.name.trim() !== \"\").sort((a, b)=>{\n            var _b_demand, _a_demand;\n            return Number((_b_demand = b === null || b === void 0 ? void 0 : b.demand) !== null && _b_demand !== void 0 ? _b_demand : 0) - Number((_a_demand = a === null || a === void 0 ? void 0 : a.demand) !== null && _a_demand !== void 0 ? _a_demand : 0);\n        });\n    } catch (error) {\n        if (error.name === \"AbortError\") return [];\n        console.error(\"❌ Failed to fetch in-demand skills:\", error);\n        return [];\n    }\n}\n// === 2. Top Matching Courses ===\nasync function fetchTopMatchingCourses(signal) {\n    try {\n        const data = await fetchJSON(\"\".concat(BASE_URL, \"/top-courses\"), undefined, signal);\n        return Array.isArray(data) ? data.map((item)=>({\n                courseName: (item === null || item === void 0 ? void 0 : item.courseName) || \"Unknown Course\",\n                courseCode: (item === null || item === void 0 ? void 0 : item.courseCode) || \"N/A\",\n                matchPercentage: Number(item === null || item === void 0 ? void 0 : item.matchPercentage) || 0\n            })) : [];\n    } catch (error) {\n        if (error.name === \"AbortError\") return [];\n        console.error(\"❌ Failed to fetch top courses:\", error);\n        return [];\n    }\n}\n// === 3. In-Demand Job Titles (Top 10) ===\nasync function fetchInDemandJobs(signal) {\n    try {\n        const data = await fetchJSON(\"\".concat(BASE_URL, \"/jobs\"), undefined, signal);\n        return Array.isArray(data) ? data.filter((item)=>(item === null || item === void 0 ? void 0 : item.title) && String(item.title).trim() !== \"\").sort((a, b)=>{\n            var _b_demand, _a_demand;\n            return Number((_b_demand = b === null || b === void 0 ? void 0 : b.demand) !== null && _b_demand !== void 0 ? _b_demand : 0) - Number((_a_demand = a === null || a === void 0 ? void 0 : a.demand) !== null && _a_demand !== void 0 ? _a_demand : 0);\n        }).slice(0, 10).map((item)=>({\n                title: String(item.title),\n                demand: Number(item.demand) || 0\n            })) : [];\n    } catch (error) {\n        if (error.name === \"AbortError\") return [];\n        console.error(\"❌ Failed to fetch in-demand jobs:\", error);\n        return [];\n    }\n}\n// === 4. Missing Skills ===\nasync function fetchMissingSkills(signal) {\n    try {\n        const rawSkills = await fetchJSON(\"\".concat(BASE_URL, \"/missing-skills\"), undefined, signal);\n        const unique = new Set();\n        for (const entry of rawSkills !== null && rawSkills !== void 0 ? rawSkills : []){\n            if (Array.isArray(entry)) {\n                entry.map((s)=>String(s)).forEach((s)=>unique.add(s.trim().toLowerCase()));\n            } else if (typeof entry === \"string\") {\n                entry.split(\",\").map((s)=>s.trim().toLowerCase()).filter(Boolean).forEach((s)=>unique.add(s));\n            }\n        }\n        return Array.from(unique).sort();\n    } catch (error) {\n        if (error.name === \"AbortError\") return [];\n        console.error(\"❌ Failed to fetch missing skills:\", error);\n        return [];\n    }\n}\n// === 5. Course Warnings ===\nasync function fetchCourseWarnings(signal) {\n    try {\n        const data = await fetchJSON(\"\".concat(BASE_URL, \"/warnings\"), undefined, signal);\n        return Array.isArray(data) ? data.map((item)=>({\n                courseName: (item === null || item === void 0 ? void 0 : item.courseName) || \"Unknown Course\",\n                courseCode: (item === null || item === void 0 ? void 0 : item.courseCode) || \"N/A\",\n                matchPercentage: Number(item === null || item === void 0 ? void 0 : item.matchPercentage) || 0\n            })) : [];\n    } catch (error) {\n        if (error.name === \"AbortError\") return [];\n        console.error(\"❌ Failed to fetch course warnings:\", error);\n        return [];\n    }\n}\n// === 6. KPI Data ===\nasync function fetchKPIData(signal) {\n    try {\n        const data = await fetchJSON(\"\".concat(BASE_URL, \"/kpi\"), undefined, signal);\n        return {\n            averageAlignmentScore: Number(data === null || data === void 0 ? void 0 : data.averageAlignmentScore) || 0,\n            totalSubjectsAnalyzed: Number(data === null || data === void 0 ? void 0 : data.totalSubjectsAnalyzed) || 0,\n            totalJobPostsAnalyzed: Number(data === null || data === void 0 ? void 0 : data.totalJobPostsAnalyzed) || 0,\n            skillsExtracted: Number(data === null || data === void 0 ? void 0 : data.skillsExtracted) || 0\n        };\n    } catch (error) {\n        if (error.name === \"AbortError\") {\n            return {\n                averageAlignmentScore: 0,\n                totalSubjectsAnalyzed: 0,\n                totalJobPostsAnalyzed: 0,\n                skillsExtracted: 0\n            };\n        }\n        console.error(\"❌ FastAPI KPI fetch failed:\", error);\n        return {\n            averageAlignmentScore: 0,\n            totalSubjectsAnalyzed: 0,\n            totalJobPostsAnalyzed: 0,\n            skillsExtracted: 0\n        };\n    }\n}\n// ================= Alias Exports (for container compatibility) =============\n// Skills (bar chart)\nconst getMostInDemandSkills = fetchMostInDemandSkills;\nconst getTopSkills = fetchMostInDemandSkills;\nconst fetchTopSkills = fetchMostInDemandSkills;\n// Top courses table\nconst getTopMatchingCourses = fetchTopMatchingCourses;\nconst getTopCourses = fetchTopMatchingCourses;\nconst fetchTopCourses = fetchTopMatchingCourses;\n// In-demand jobs (pie)\nconst getInDemandJobs = fetchInDemandJobs;\n// Missing skills list\nconst getMissingSkills = fetchMissingSkills;\nconst loadMissingSkills = fetchMissingSkills;\n// Course warnings\nconst getCourseWarnings = fetchCourseWarnings;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/dataService.ts\n"));

/***/ })

}]);