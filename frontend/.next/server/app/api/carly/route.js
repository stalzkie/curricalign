/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/carly/route";
exports.ids = ["app/api/carly/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcarly%2Froute&page=%2Fapi%2Fcarly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcarly%2Froute.ts&appDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcarly%2Froute&page=%2Fapi%2Fcarly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcarly%2Froute.ts&appDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_stal_Documents_Projects_curricalign_frontend_src_app_api_carly_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/carly/route.ts */ \"(rsc)/./src/app/api/carly/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/carly/route\",\n        pathname: \"/api/carly\",\n        filename: \"route\",\n        bundlePath: \"app/api/carly/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/Users/stal/Documents/Projects/curricalign/frontend/src/app/api/carly/route.ts\",\n    nextConfigOutput,\n    userland: _Users_stal_Documents_Projects_curricalign_frontend_src_app_api_carly_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/carly/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcarly%2Froute&page=%2Fapi%2Fcarly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcarly%2Froute.ts&appDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/carly/db.ts":
/*!*********************************!*\
  !*** ./src/app/api/carly/db.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TABLES: () => (/* binding */ TABLES),\n/* harmony export */   dbSelectOptimized: () => (/* binding */ dbSelectOptimized)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/../node_modules/zod/v4/classic/schemas.js\");\n// api/carly/db.ts\n\n\n// ---------------- Config: whitelist + token-guardrails ----------------\nconst TABLES = {\n    jobs: [\n        'id',\n        'title',\n        'created_at',\n        'updated_at'\n    ],\n    job_skills: [\n        'job_id',\n        'skill',\n        'created_at'\n    ],\n    courses: [\n        'id',\n        'title',\n        'code',\n        'updated_at'\n    ],\n    course_skills: [\n        'course_id',\n        'skill'\n    ],\n    course_alignment_scores: [\n        'course_id',\n        'score',\n        'calculated_at'\n    ]\n};\n// Hard caps to protect tokens\nconst MAX_ROWS_HARD = 50; // never fetch more than this\nconst MAX_COLS_HARD = 8; // never return more than this many columns\nconst DEFAULT_LIMIT = 25; // soft cap unless user asks for more\nconst DEFAULT_SAMPLE = 8; // number of rows to include in the sample\nconst MAX_CELL_LEN = 80; // trim long strings so the tool response stays small\nconst TOP_VALUES_PER_COL = 5; // summarize categorical columns by top N values\nfunction getSupaReadOnly() {\n    const url = \"https://swiuodmiiuqausjombgm.supabase.co\";\n    const key = process.env.SUPABASE_SERVICE_ROLE_KEY; // server-only\n    if (!url) throw new Error('Missing env: NEXT_PUBLIC_SUPABASE_URL');\n    if (!key) throw new Error('Missing env: SUPABASE_SERVICE_ROLE_KEY');\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, key, {\n        auth: {\n            persistSession: false\n        }\n    });\n}\nconst DbSelectSchema = zod__WEBPACK_IMPORTED_MODULE_1__.object({\n    table: zod__WEBPACK_IMPORTED_MODULE_1__.string(),\n    columns: zod__WEBPACK_IMPORTED_MODULE_1__.array(zod__WEBPACK_IMPORTED_MODULE_1__.string()).optional(),\n    eq: zod__WEBPACK_IMPORTED_MODULE_1__.record(zod__WEBPACK_IMPORTED_MODULE_1__.string(), zod__WEBPACK_IMPORTED_MODULE_1__.string().or(zod__WEBPACK_IMPORTED_MODULE_1__.number())).optional(),\n    ilike: zod__WEBPACK_IMPORTED_MODULE_1__.record(zod__WEBPACK_IMPORTED_MODULE_1__.string(), zod__WEBPACK_IMPORTED_MODULE_1__.string()).optional(),\n    gte: zod__WEBPACK_IMPORTED_MODULE_1__.record(zod__WEBPACK_IMPORTED_MODULE_1__.string(), zod__WEBPACK_IMPORTED_MODULE_1__.string().or(zod__WEBPACK_IMPORTED_MODULE_1__.number())).optional(),\n    lte: zod__WEBPACK_IMPORTED_MODULE_1__.record(zod__WEBPACK_IMPORTED_MODULE_1__.string(), zod__WEBPACK_IMPORTED_MODULE_1__.string().or(zod__WEBPACK_IMPORTED_MODULE_1__.number())).optional(),\n    orderBy: zod__WEBPACK_IMPORTED_MODULE_1__.string().optional(),\n    desc: zod__WEBPACK_IMPORTED_MODULE_1__.boolean().optional(),\n    limit: zod__WEBPACK_IMPORTED_MODULE_1__.number().min(1).max(MAX_ROWS_HARD).optional(),\n    offset: zod__WEBPACK_IMPORTED_MODULE_1__.number().min(0).max(5000).optional(),\n    // token optimization knobs\n    sampleSize: zod__WEBPACK_IMPORTED_MODULE_1__.number().min(0).max(DEFAULT_LIMIT).optional(),\n    mode: zod__WEBPACK_IMPORTED_MODULE_1__[\"enum\"]([\n        'summary',\n        'rows'\n    ]).optional()\n});\n// --------------- helpers ---------------\nconst trimCell = (v)=>{\n    if (v == null) return v;\n    const s = String(v);\n    return s.length > MAX_CELL_LEN ? s.slice(0, MAX_CELL_LEN - 1) + '…' : s;\n};\nconst pickAllowedColumns = (table, requested)=>{\n    const allowed = TABLES[table] ?? [];\n    const cols = (requested && requested.length ? requested : allowed).filter((c)=>allowed.includes(c));\n    return cols.slice(0, MAX_COLS_HARD);\n};\n// --------------- main ---------------\nasync function dbSelectOptimized(raw) {\n    const args = DbSelectSchema.parse(raw);\n    const allowedCols = TABLES[args.table];\n    if (!allowedCols) {\n        return {\n            ok: false,\n            error: `Table \"${args.table}\" not allowed`\n        };\n    }\n    // columns & limits\n    const cols = pickAllowedColumns(args.table, args.columns);\n    if (!cols.length) return {\n        ok: false,\n        error: 'No allowed columns requested'\n    };\n    const limit = Math.min(args.limit ?? DEFAULT_LIMIT, MAX_ROWS_HARD);\n    const sampleSize = Math.min(args.sampleSize ?? DEFAULT_SAMPLE, limit);\n    const supa = getSupaReadOnly();\n    let q = supa.from(args.table).select(cols.join(','));\n    // filters\n    for (const group of [\n        'eq',\n        'ilike',\n        'gte',\n        'lte'\n    ]){\n        const rec = args[group];\n        if (!rec) continue;\n        for (const [k, v] of Object.entries(rec)){\n            if (!cols.includes(k) && !allowedCols.includes(k)) continue;\n            switch(group){\n                case 'eq':\n                    q = q.eq(k, v);\n                    break;\n                case 'ilike':\n                    q = q.ilike(k, v);\n                    break;\n                case 'gte':\n                    q = q.gte(k, v);\n                    break;\n                case 'lte':\n                    q = q.lte(k, v);\n                    break;\n            }\n        }\n    }\n    // order / pagination\n    if (args.orderBy && (cols.includes(args.orderBy) || allowedCols.includes(args.orderBy))) {\n        q = q.order(args.orderBy, {\n            ascending: !args.desc\n        });\n    }\n    if (args.offset) q = q.range(args.offset, args.offset + limit - 1);\n    else q = q.limit(limit);\n    const res = await q;\n    if (res.error) return {\n        ok: false,\n        error: res.error.message\n    };\n    const items = res.data ?? [];\n    // ---------- build compact summary ----------\n    const summary = {\n        rowCount: items.length,\n        columns: cols\n    };\n    // simple value counts for categorical-ish columns (strings)\n    for (const col of cols){\n        // collect frequency if column looks categorical (string, short)\n        const freq = new Map();\n        let stringy = 0;\n        for (const r of items){\n            const v = r[col];\n            if (typeof v === 'string') {\n                stringy++;\n                const key = trimCell(v);\n                freq.set(key, (freq.get(key) ?? 0) + 1);\n            }\n        }\n        if (stringy && freq.size) {\n            const top = [\n                ...freq.entries()\n            ].sort((a, b)=>b[1] - a[1]).slice(0, TOP_VALUES_PER_COL).map(([value, count])=>({\n                    value,\n                    count\n                }));\n            summary[col] = {\n                topValues: top,\n                distinct: freq.size\n            };\n        }\n    }\n    // numeric aggregates\n    for (const col of cols){\n        const nums = items.map((r)=>Number(r[col])).filter((n)=>Number.isFinite(n));\n        if (nums.length >= 3) {\n            const min = Math.min(...nums);\n            const max = Math.max(...nums);\n            const avg = nums.reduce((a, b)=>a + b, 0) / nums.length;\n            summary[col] = {\n                ...summary[col] || {},\n                stats: {\n                    min,\n                    max,\n                    avg: Number(avg.toFixed(3)),\n                    n: nums.length\n                }\n            };\n        }\n    }\n    // small sample of rows (trimmed)\n    const sampleRows = items.slice(0, sampleSize).map((r)=>{\n        const obj = {};\n        for (const c of cols)obj[c] = trimCell(r[c]);\n        return obj;\n    });\n    // 'rows' mode returns only a small trimmed row set (still token-safe)\n    if (args.mode === 'rows') {\n        return {\n            ok: true,\n            mode: 'rows',\n            table: args.table,\n            returned: sampleRows.length,\n            limitApplied: limit,\n            columns: cols,\n            rows: sampleRows,\n            note: `Trimmed to ${sampleRows.length} rows, ${cols.length} cols. Cells > ${MAX_CELL_LEN} chars truncated.`\n        };\n    }\n    // default: 'summary' mode\n    return {\n        ok: true,\n        mode: 'summary',\n        table: args.table,\n        limitApplied: limit,\n        columns: cols,\n        sample: sampleRows,\n        summary,\n        note: `Summary with ${sampleRows.length} sample rows. Cells > ${MAX_CELL_LEN} chars truncated.`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/carly/db.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/carly/route.ts":
/*!************************************!*\
  !*** ./src/app/api/carly/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var _google_genai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/genai */ \"(rsc)/../node_modules/@google/genai/dist/node/index.mjs\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"(rsc)/../node_modules/zod/v4/classic/schemas.js\");\n/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tools */ \"(rsc)/./src/app/api/carly/tools.ts\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./db */ \"(rsc)/./src/app/api/carly/db.ts\");\n// api/carly/route.ts\n\n\n\n\n\nconst runtime = 'nodejs';\nconst dynamic = 'force-dynamic';\nconst ai = new _google_genai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenAI({\n    apiKey: process.env.GEMINI_API_KEY\n});\nfunction getSupaAdmin() {\n    const url = \"https://swiuodmiiuqausjombgm.supabase.co\";\n    const key = process.env.SUPABASE_SERVICE_ROLE_KEY; // server-only\n    if (!url) throw new Error('Missing env: NEXT_PUBLIC_SUPABASE_URL');\n    if (!key) throw new Error('Missing env: SUPABASE_SERVICE_ROLE_KEY');\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(url, key, {\n        auth: {\n            persistSession: false\n        }\n    });\n}\nconst BodySchema = zod__WEBPACK_IMPORTED_MODULE_4__.object({\n    messages: zod__WEBPACK_IMPORTED_MODULE_4__.array(zod__WEBPACK_IMPORTED_MODULE_4__.object({\n        role: zod__WEBPACK_IMPORTED_MODULE_4__[\"enum\"]([\n            'user',\n            'assistant'\n        ]),\n        content: zod__WEBPACK_IMPORTED_MODULE_4__.string()\n    })),\n    filterSource: zod__WEBPACK_IMPORTED_MODULE_4__.string().optional(),\n    k: zod__WEBPACK_IMPORTED_MODULE_4__.number().optional()\n});\n// ----------------- helpers -----------------\nasync function embedQuery(q) {\n    // Embed the plain query text; keep config explicit\n    const res = await ai.models.embedContent({\n        model: 'gemini-embedding-001',\n        contents: q,\n        config: {\n            taskType: 'RETRIEVAL_QUERY',\n            outputDimensionality: 768\n        }\n    });\n    if (!res.embeddings) throw new Error('Gemini did not return embeddings for embedQuery');\n    return res.embeddings[0].values;\n}\nasync function retrieveContext(queryText, filterSource, k = 8) {\n    const qVec = await embedQuery(queryText);\n    const supa = getSupaAdmin();\n    const { data, error } = await supa.rpc('match_carly_documents', {\n        query_embedding: qVec,\n        match_count: k,\n        filter_source: filterSource ?? null\n    });\n    if (error) throw error;\n    return (data ?? []).map((d)=>`SOURCE: ${d.source}${d.title ? ` | ${d.title}` : ''}\\n${d.content}`).join('\\n---\\n');\n}\n// We include \"system\" policy inside the first user turn (Gemini SDK doesn't support a system param).\nconst SYSTEM = `\nYou are ${process.env.CARLY_NAME ?? 'Carly'}, the built-in assistant for our app.\nStyle: concise, accurate, cite sources (by SOURCE label if present), avoid speculation.\nIf asked about pipeline/metrics, prefer live data via tools or RAG context.\nIf you don't know, say so and propose a next step.\nDo not repeat the prompt or the context in your answer.\n\nYou may call dbSelect to read allowed tables (jobs, job_skills, courses, course_skills, course_alignment_scores).\nPrefer mode=\"summary\", limit ≤ 25, and only necessary columns. Use filters (eq/ilike/gte/lte) to narrow results.\n`.trim();\n// ---------- robust stream normalizer (no echo) ----------\nconst lcp = (a, b)=>{\n    const n = Math.min(a.length, b.length);\n    let i = 0;\n    while(i < n && a.charCodeAt(i) === b.charCodeAt(i))i++;\n    return i;\n};\nconst getTextFromChunk = (c)=>{\n    if (!c) return '';\n    if (typeof c.text === 'string') return c.text;\n    if (c.delta?.text) return c.delta.text;\n    const cand = c.candidatesChunk?.candidates?.[0];\n    if (cand?.content?.parts?.length) {\n        return cand.content.parts.map((p)=>typeof p.text === 'string' ? p.text : '').join('');\n    }\n    if (Array.isArray(c.parts)) {\n        return c.parts.map((p)=>p?.text ?? '').join('');\n    }\n    if (Array.isArray(c.candidates)) {\n        const p = c.candidates[0]?.content?.parts ?? [];\n        return p.map((x)=>x?.text ?? '').join('');\n    }\n    return '';\n};\nasync function pipeModelStreamToSSE(resp, controller) {\n    let total = '';\n    let lastEmitted = '';\n    for await (const chunk of resp){\n        const piece = getTextFromChunk(chunk);\n        if (!piece) continue;\n        let fresh = '';\n        if (piece.startsWith(total)) {\n            // cumulative\n            fresh = piece.slice(total.length);\n            total = piece;\n        } else {\n            // delta or rewind — compute safe suffix\n            const i = lcp(total, piece);\n            fresh = piece.slice(i);\n            total = piece;\n        }\n        if (fresh && fresh !== lastEmitted) {\n            controller.enqueue(`data: ${JSON.stringify({\n                delta: fresh\n            })}\\n\\n`);\n            lastEmitted = fresh;\n        }\n    }\n}\n// ----------------- main handler -----------------\nasync function POST(req) {\n    const body = await req.json();\n    const { messages, filterSource, k } = BodySchema.parse(body);\n    const userLast = [\n        ...messages\n    ].reverse().find((m)=>m.role === 'user')?.content ?? '';\n    const context = await retrieveContext(userLast, filterSource, k);\n    const stream = new ReadableStream({\n        async start (controller) {\n            try {\n                // A single clean user message that carries policy + context + question.\n                const contents = [\n                    {\n                        role: 'user',\n                        parts: [\n                            {\n                                text: `POLICY:\n${SYSTEM}\n\nCONTEXT (RAG):\n${context || '(none)'}\n\nUSER:\n${userLast}`\n                            }\n                        ]\n                    }\n                ];\n                // Tool declarations (dbSelect + existing skill/alignment tools)\n                const tools = [\n                    {\n                        functionDeclarations: [\n                            // Generic DB (token-optimized)\n                            {\n                                name: 'dbSelect',\n                                description: 'Read whitelisted tables with filters. Returns a compact summary and small sample to save tokens.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        table: {\n                                            type: 'string'\n                                        },\n                                        columns: {\n                                            type: 'array',\n                                            items: {\n                                                type: 'string'\n                                            }\n                                        },\n                                        eq: {\n                                            type: 'object',\n                                            additionalProperties: {\n                                                anyOf: [\n                                                    {\n                                                        type: 'string'\n                                                    },\n                                                    {\n                                                        type: 'number'\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        ilike: {\n                                            type: 'object',\n                                            additionalProperties: {\n                                                type: 'string'\n                                            }\n                                        },\n                                        gte: {\n                                            type: 'object',\n                                            additionalProperties: {\n                                                anyOf: [\n                                                    {\n                                                        type: 'string'\n                                                    },\n                                                    {\n                                                        type: 'number'\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        lte: {\n                                            type: 'object',\n                                            additionalProperties: {\n                                                anyOf: [\n                                                    {\n                                                        type: 'string'\n                                                    },\n                                                    {\n                                                        type: 'number'\n                                                    }\n                                                ]\n                                            }\n                                        },\n                                        orderBy: {\n                                            type: 'string'\n                                        },\n                                        desc: {\n                                            type: 'boolean'\n                                        },\n                                        limit: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 50\n                                        },\n                                        offset: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 5000\n                                        },\n                                        sampleSize: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 25\n                                        },\n                                        mode: {\n                                            type: 'string',\n                                            enum: [\n                                                'summary',\n                                                'rows'\n                                            ]\n                                        }\n                                    },\n                                    required: [\n                                        'table'\n                                    ]\n                                }\n                            },\n                            // KPIs\n                            {\n                                name: 'getLatestKPIs',\n                                description: 'Return dashboard KPI snapshot.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {}\n                                }\n                            },\n                            // Skills & alignment (DB-backed)\n                            {\n                                name: 'getTopInDemandSkills',\n                                description: 'Top in-demand skills from recent job postings.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        },\n                                        limit: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 100\n                                        },\n                                        minCount: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 10000\n                                        }\n                                    }\n                                }\n                            },\n                            {\n                                name: 'getCourseSkillCoverage',\n                                description: 'Skills a course teaches and how they overlap with market demand.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        courseId: {\n                                            type: 'string'\n                                        },\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        }\n                                    },\n                                    required: [\n                                        'courseId'\n                                    ]\n                                }\n                            },\n                            {\n                                name: 'getMissingSkillsForCourse',\n                                description: 'In-demand skills that a course does not cover.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        courseId: {\n                                            type: 'string'\n                                        },\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        },\n                                        minCount: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 10000\n                                        },\n                                        limit: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 200\n                                        }\n                                    },\n                                    required: [\n                                        'courseId'\n                                    ]\n                                }\n                            },\n                            {\n                                name: 'getAlignmentSummary',\n                                description: 'Average alignment scores for a course or across courses.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        courseId: {\n                                            type: 'string'\n                                        },\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        }\n                                    }\n                                }\n                            },\n                            // Optional dataService-backed variants\n                            {\n                                name: 'getInDemandSkillsViaService',\n                                description: 'Use dataService.ts (if available) to compute in-demand skills.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        },\n                                        limit: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 100\n                                        },\n                                        minCount: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 10000\n                                        }\n                                    }\n                                }\n                            },\n                            {\n                                name: 'getCourseSkillCoverageViaService',\n                                description: 'Use dataService.ts (if available) to compute course skill coverage.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        courseId: {\n                                            type: 'string'\n                                        },\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        }\n                                    },\n                                    required: [\n                                        'courseId'\n                                    ]\n                                }\n                            },\n                            {\n                                name: 'getMissingSkillsForCourseViaService',\n                                description: 'Use dataService.ts (if available) to compute missing skills for a course.',\n                                parametersJsonSchema: {\n                                    type: 'object',\n                                    properties: {\n                                        courseId: {\n                                            type: 'string'\n                                        },\n                                        windowDays: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 365\n                                        },\n                                        minCount: {\n                                            type: 'number',\n                                            minimum: 0,\n                                            maximum: 10000\n                                        },\n                                        limit: {\n                                            type: 'number',\n                                            minimum: 1,\n                                            maximum: 200\n                                        }\n                                    },\n                                    required: [\n                                        'courseId'\n                                    ]\n                                }\n                            }\n                        ]\n                    }\n                ];\n                // 1) Probe for tool call (non-stream)\n                const first = await ai.models.generateContent({\n                    model: process.env.CARLY_MODEL || 'gemini-2.5-flash',\n                    contents,\n                    config: {\n                        tools,\n                        toolConfig: {\n                            functionCallingConfig: {\n                                mode: _google_genai__WEBPACK_IMPORTED_MODULE_0__.FunctionCallingConfigMode.AUTO\n                            }\n                        }\n                    }\n                });\n                const functionCalls = first.functionCalls;\n                if (functionCalls?.length) {\n                    // Tool call path\n                    const call = functionCalls[0];\n                    let result = {};\n                    try {\n                        switch(call.name){\n                            // Generic DB\n                            case 'dbSelect':\n                                {\n                                    if (!call.args || typeof call.args.table !== 'string') {\n                                        result = {\n                                            ok: false,\n                                            error: 'dbSelect: missing required \"table\" argument'\n                                        };\n                                        break;\n                                    }\n                                    // Safe to cast after the guard\n                                    result = await (0,_db__WEBPACK_IMPORTED_MODULE_2__.dbSelectOptimized)(call.args);\n                                    break;\n                                }\n                            // KPIs\n                            case 'getLatestKPIs':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getLatestKPIs)();\n                                break;\n                            // Skills (DB-backed)\n                            case 'getTopInDemandSkills':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getTopInDemandSkills)({\n                                    windowDays: call.args?.windowDays,\n                                    limit: call.args?.limit,\n                                    minCount: call.args?.minCount\n                                });\n                                break;\n                            case 'getCourseSkillCoverage':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getCourseSkillCoverage)({\n                                    courseId: String(call.args?.courseId ?? ''),\n                                    windowDays: call.args?.windowDays\n                                });\n                                break;\n                            case 'getMissingSkillsForCourse':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getMissingSkillsForCourse)({\n                                    courseId: String(call.args?.courseId ?? ''),\n                                    windowDays: call.args?.windowDays,\n                                    minCount: call.args?.minCount,\n                                    limit: call.args?.limit\n                                });\n                                break;\n                            case 'getAlignmentSummary':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getAlignmentSummary)({\n                                    courseId: call.args?.courseId,\n                                    windowDays: call.args?.windowDays\n                                });\n                                break;\n                            // dataService-backed variants\n                            case 'getInDemandSkillsViaService':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getInDemandSkillsViaService)({\n                                    windowDays: call.args?.windowDays,\n                                    limit: call.args?.limit,\n                                    minCount: call.args?.minCount\n                                });\n                                break;\n                            case 'getCourseSkillCoverageViaService':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getCourseSkillCoverageViaService)({\n                                    courseId: String(call.args?.courseId ?? ''),\n                                    windowDays: call.args?.windowDays\n                                });\n                                break;\n                            case 'getMissingSkillsForCourseViaService':\n                                result = await (0,_tools__WEBPACK_IMPORTED_MODULE_1__.getMissingSkillsForCourseViaService)({\n                                    courseId: String(call.args?.courseId ?? ''),\n                                    windowDays: call.args?.windowDays,\n                                    minCount: call.args?.minCount,\n                                    limit: call.args?.limit\n                                });\n                                break;\n                            default:\n                                result = {\n                                    ok: false,\n                                    error: `Unknown tool: ${call.name}`\n                                };\n                        }\n                    } catch (e) {\n                        result = {\n                            ok: false,\n                            error: e?.message || String(e)\n                        };\n                    }\n                    const newContents = [\n                        ...contents,\n                        {\n                            role: 'tool',\n                            parts: [\n                                {\n                                    functionResponse: {\n                                        name: call.name,\n                                        response: result\n                                    }\n                                }\n                            ]\n                        }\n                    ];\n                    const resp = await ai.models.generateContentStream({\n                        model: process.env.CARLY_MODEL || 'gemini-2.5-flash',\n                        contents: newContents\n                    });\n                    await pipeModelStreamToSSE(resp, controller);\n                } else {\n                    // No tool call — stream the answer\n                    const resp = await ai.models.generateContentStream({\n                        model: process.env.CARLY_MODEL || 'gemini-2.5-flash',\n                        contents\n                    });\n                    await pipeModelStreamToSSE(resp, controller);\n                }\n                controller.enqueue(`event: done\\ndata: {}\\n\\n`);\n                controller.close();\n            } catch (err) {\n                console.error('API Error:', err);\n                controller.enqueue(`event: error\\ndata: ${JSON.stringify({\n                    error: err.message\n                })}\\n\\n`);\n                controller.close();\n            }\n        }\n    });\n    return new Response(stream, {\n        headers: {\n            'Content-Type': 'text/event-stream; charset=utf-8',\n            'Cache-Control': 'no-cache, no-transform',\n            Connection: 'keep-alive',\n            'Access-Control-Allow-Origin': '*',\n            'X-Accel-Buffering': 'no'\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/carly/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/api/carly/tools.ts":
/*!************************************!*\
  !*** ./src/app/api/carly/tools.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAlignmentSummary: () => (/* binding */ getAlignmentSummary),\n/* harmony export */   getCourseSkillCoverage: () => (/* binding */ getCourseSkillCoverage),\n/* harmony export */   getCourseSkillCoverageViaService: () => (/* binding */ getCourseSkillCoverageViaService),\n/* harmony export */   getInDemandSkillsViaService: () => (/* binding */ getInDemandSkillsViaService),\n/* harmony export */   getLatestKPIs: () => (/* binding */ getLatestKPIs),\n/* harmony export */   getMissingSkillsForCourse: () => (/* binding */ getMissingSkillsForCourse),\n/* harmony export */   getMissingSkillsForCourseViaService: () => (/* binding */ getMissingSkillsForCourseViaService),\n/* harmony export */   getTopInDemandSkills: () => (/* binding */ getTopInDemandSkills)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// api/carly/tools.ts\n\nfunction getSupaAdmin() {\n    const url = \"https://swiuodmiiuqausjombgm.supabase.co\";\n    const key = process.env.SUPABASE_SERVICE_ROLE_KEY; // server-only\n    if (!url) throw new Error('Missing env: NEXT_PUBLIC_SUPABASE_URL');\n    if (!key) throw new Error('Missing env: SUPABASE_SERVICE_ROLE_KEY');\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(url, key, {\n        auth: {\n            persistSession: false\n        }\n    });\n}\n/** Existing */ async function getLatestKPIs() {\n    const supa = getSupaAdmin();\n    const [jobsHead, coursesHead, scoresRes] = await Promise.all([\n        supa.from('jobs').select('*', {\n            head: true,\n            count: 'exact'\n        }),\n        supa.from('courses').select('*', {\n            head: true,\n            count: 'exact'\n        }),\n        supa.from('course_alignment_scores').select('score').order('calculated_at', {\n            ascending: false\n        }).limit(100)\n    ]);\n    if (jobsHead.error) throw new Error(`jobs: ${jobsHead.error.message || 'unknown error'}`);\n    if (coursesHead.error) throw new Error(`courses: ${coursesHead.error.message || 'unknown error'}`);\n    if (scoresRes.error) throw new Error(`course_alignment_scores: ${scoresRes.error.message || 'unknown error'}`);\n    const job_count = jobsHead.count ?? 0;\n    const course_count = coursesHead.count ?? 0;\n    const scores = scoresRes.data ?? [];\n    const avg = scores.reduce((a, b)=>a + (b?.score ?? 0), 0) / Math.max(scores.length, 1);\n    return {\n        job_count,\n        course_count,\n        latest_alignment_avg: Number.isFinite(avg) ? Number(avg.toFixed(2)) : 0,\n        _source: 'supabase'\n    };\n}\n/* -------------------------------------------------------------------------- */ /*                                SKILLS TOOLS                                */ /* -------------------------------------------------------------------------- */ /**\n * Top in-demand skills from job_skills over a recent window.\n * Assumes job_skills(skill text, job_id uuid, created_at timestamptz?) and jobs(id, created_at).\n */ async function getTopInDemandSkills(opts) {\n    const supa = getSupaAdmin();\n    const windowDays = Math.max(1, Math.min(365, opts?.windowDays ?? 30));\n    const limit = Math.max(1, Math.min(100, opts?.limit ?? 25));\n    const minCount = Math.max(0, opts?.minCount ?? 0);\n    // Prefer an RPC (faster & cleaner). If you add this in DB, uncomment the RPC block and remove fallback.\n    const rpcTry = await supa.rpc('top_in_demand_skills', {\n        window_days: windowDays,\n        top_limit: limit,\n        min_count: minCount\n    });\n    if (!rpcTry.error && rpcTry.data) {\n        return {\n            ok: true,\n            items: rpcTry.data,\n            via: 'rpc'\n        };\n    }\n    // Fallback: do it with PostgREST filters (may be slower on large tables).\n    // We count skills on jobs created in the window. Adjust column names if needed.\n    const sinceISO = new Date(Date.now() - windowDays * 86400000).toISOString();\n    // Pull skill counts keyed by skill. If you have a materialized view, use that instead.\n    const res = await supa.from('job_skills').select('skill, jobs!inner(created_at)').gte('jobs.created_at', sinceISO);\n    if (res.error) throw new Error(`job_skills: ${res.error.message || 'unknown error'}`);\n    const counts = new Map();\n    for (const row of res.data ?? []){\n        const s = (row.skill ?? '').trim();\n        if (!s) continue;\n        counts.set(s, (counts.get(s) ?? 0) + 1);\n    }\n    const items = [\n        ...counts.entries()\n    ].map(([skill, count])=>({\n            skill,\n            count\n        })).filter((r)=>r.count >= minCount).sort((a, b)=>b.count - a.count).slice(0, limit);\n    return {\n        ok: true,\n        items,\n        via: 'fallback'\n    };\n}\n/**\n * Skills a course teaches, and how those overlap with current demand.\n * Assumes course_skills(course_id uuid, skill text)\n */ async function getCourseSkillCoverage(opts) {\n    const supa = getSupaAdmin();\n    const { courseId } = opts;\n    const windowDays = Math.max(1, Math.min(365, opts?.windowDays ?? 30));\n    // 1) course skills\n    const cs = await supa.from('course_skills').select('skill').eq('course_id', courseId);\n    if (cs.error) throw new Error(`course_skills: ${cs.error.message || 'unknown error'}`);\n    const taught = new Set((cs.data ?? []).map((r)=>(r.skill ?? '').trim()).filter(Boolean));\n    // 2) top demand\n    const top = await getTopInDemandSkills({\n        windowDays,\n        limit: 200\n    });\n    const demandSet = new Set((top.items ?? []).map((r)=>r.skill));\n    const covered = [\n        ...taught\n    ].filter((s)=>demandSet.has(s));\n    const missing = [\n        ...demandSet\n    ].filter((s)=>!taught.has(s));\n    const coveragePct = taught.size ? Number((covered.length / taught.size * 100).toFixed(1)) : 0;\n    return {\n        ok: true,\n        courseId,\n        counts: {\n            taught: taught.size,\n            covered: covered.length,\n            missing: missing.length\n        },\n        coveragePct,\n        coveredSkills: covered,\n        missingSkills: missing\n    };\n}\n/**\n * Missing in-demand skills for a specific course (with thresholds).\n */ async function getMissingSkillsForCourse(opts) {\n    const { courseId } = opts;\n    const windowDays = Math.max(1, Math.min(365, opts?.windowDays ?? 30));\n    const minCount = Math.max(0, opts?.minCount ?? 3);\n    const limit = Math.max(1, Math.min(200, opts?.limit ?? 50));\n    const [coverage, top] = await Promise.all([\n        getCourseSkillCoverage({\n            courseId,\n            windowDays\n        }),\n        getTopInDemandSkills({\n            windowDays,\n            limit: 500,\n            minCount\n        })\n    ]);\n    const missingRanked = (top.items ?? []).filter((r)=>(coverage.missingSkills ?? []).includes(r.skill)).slice(0, limit);\n    return {\n        ok: true,\n        courseId,\n        missing: missingRanked,\n        coveragePct: coverage.coveragePct\n    };\n}\n/**\n * Alignment summary for a course or globally.\n * Assumes course_alignment_scores(course_id, score, calculated_at)\n */ async function getAlignmentSummary(opts) {\n    const supa = getSupaAdmin();\n    const windowDays = Math.max(1, Math.min(365, opts?.windowDays ?? 90));\n    const sinceISO = new Date(Date.now() - windowDays * 86400000).toISOString();\n    let q = supa.from('course_alignment_scores').select('course_id,score,calculated_at').gte('calculated_at', sinceISO).order('calculated_at', {\n        ascending: false\n    });\n    if (opts?.courseId) q = q.eq('course_id', opts.courseId);\n    const res = await q;\n    if (res.error) throw new Error(`course_alignment_scores: ${res.error.message || 'unknown error'}`);\n    const rows = res.data ?? [];\n    if (opts?.courseId) {\n        const avg = rows.reduce((a, r)=>a + (r.score ?? 0), 0) / Math.max(rows.length, 1);\n        return {\n            ok: true,\n            courseId: opts.courseId,\n            avg: Number(avg.toFixed(2)),\n            n: rows.length\n        };\n    }\n    // global per-course avg\n    const map = new Map();\n    for (const r of rows){\n        const k = String(r.course_id ?? '');\n        const m = map.get(k) ?? {\n            sum: 0,\n            n: 0\n        };\n        m.sum += r.score ?? 0;\n        m.n += 1;\n        map.set(k, m);\n    }\n    const items = [\n        ...map.entries()\n    ].map(([courseId, { sum, n }])=>({\n            courseId,\n            avg: Number((sum / Math.max(n, 1)).toFixed(2)),\n            n\n        }));\n    items.sort((a, b)=>b.avg - a.avg);\n    return {\n        ok: true,\n        items\n    };\n}\nasync function tryLoadDataService() {\n    try {\n        const mod = await __webpack_require__.e(/*! import() */ \"_rsc_src_lib_dataService_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../lib/dataService */ \"(rsc)/./src/lib/dataService.ts\"));\n        return mod;\n    } catch  {\n        return null;\n    }\n}\nasync function getInDemandSkillsViaService(opts) {\n    const svc = await tryLoadDataService();\n    if (svc?.getInDemandSkills) return svc.getInDemandSkills(opts ?? {});\n    // Fallback to our DB method\n    return getTopInDemandSkills(opts);\n}\nasync function getMissingSkillsForCourseViaService(opts) {\n    const svc = await tryLoadDataService();\n    if (svc?.getMissingSkillsForCourse) return svc.getMissingSkillsForCourse(opts);\n    return getMissingSkillsForCourse(opts);\n}\nasync function getCourseSkillCoverageViaService(opts) {\n    const svc = await tryLoadDataService();\n    if (svc?.getCourseSkillCoverage) return svc.getCourseSkillCoverage(opts);\n    return getCourseSkillCoverage(opts);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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c3RhbC9Eb2N1bWVudHMvUHJvamVjdHMvY3VycmljYWxpZ24vZnJvbnRlbmQvc3JjL2FwcC9hcGkvY2FybHkvdG9vbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYXBpL2Nhcmx5L3Rvb2xzLnRzXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG5mdW5jdGlvbiBnZXRTdXBhQWRtaW4oKSB7XG4gIGNvbnN0IHVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTDtcbiAgY29uc3Qga2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWTsgLy8gc2VydmVyLW9ubHlcbiAgaWYgKCF1cmwpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBlbnY6IE5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCcpO1xuICBpZiAoIWtleSkgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIGVudjogU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWScpO1xuICByZXR1cm4gY3JlYXRlQ2xpZW50KHVybCwga2V5LCB7IGF1dGg6IHsgcGVyc2lzdFNlc3Npb246IGZhbHNlIH0gfSk7XG59XG5cbi8qKiBFeGlzdGluZyAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExhdGVzdEtQSXMoKSB7XG4gIGNvbnN0IHN1cGEgPSBnZXRTdXBhQWRtaW4oKTtcbiAgY29uc3QgW2pvYnNIZWFkLCBjb3Vyc2VzSGVhZCwgc2NvcmVzUmVzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICBzdXBhLmZyb20oJ2pvYnMnKS5zZWxlY3QoJyonLCB7IGhlYWQ6IHRydWUsIGNvdW50OiAnZXhhY3QnIH0pLFxuICAgIHN1cGEuZnJvbSgnY291cnNlcycpLnNlbGVjdCgnKicsIHsgaGVhZDogdHJ1ZSwgY291bnQ6ICdleGFjdCcgfSksXG4gICAgc3VwYVxuICAgICAgLmZyb20oJ2NvdXJzZV9hbGlnbm1lbnRfc2NvcmVzJylcbiAgICAgIC5zZWxlY3QoJ3Njb3JlJylcbiAgICAgIC5vcmRlcignY2FsY3VsYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgICAgLmxpbWl0KDEwMCksXG4gIF0pO1xuICBpZiAoam9ic0hlYWQuZXJyb3IpIHRocm93IG5ldyBFcnJvcihgam9iczogJHtqb2JzSGVhZC5lcnJvci5tZXNzYWdlIHx8ICd1bmtub3duIGVycm9yJ31gKTtcbiAgaWYgKGNvdXJzZXNIZWFkLmVycm9yKSB0aHJvdyBuZXcgRXJyb3IoYGNvdXJzZXM6ICR7Y291cnNlc0hlYWQuZXJyb3IubWVzc2FnZSB8fCAndW5rbm93biBlcnJvcid9YCk7XG4gIGlmIChzY29yZXNSZXMuZXJyb3IpIHRocm93IG5ldyBFcnJvcihgY291cnNlX2FsaWdubWVudF9zY29yZXM6ICR7c2NvcmVzUmVzLmVycm9yLm1lc3NhZ2UgfHwgJ3Vua25vd24gZXJyb3InfWApO1xuXG4gIGNvbnN0IGpvYl9jb3VudCA9IGpvYnNIZWFkLmNvdW50ID8/IDA7XG4gIGNvbnN0IGNvdXJzZV9jb3VudCA9IGNvdXJzZXNIZWFkLmNvdW50ID8/IDA7XG4gIGNvbnN0IHNjb3JlcyA9IHNjb3Jlc1Jlcy5kYXRhID8/IFtdO1xuICBjb25zdCBhdmcgPVxuICAgIHNjb3Jlcy5yZWR1Y2UoKGE6IG51bWJlciwgYjogYW55KSA9PiBhICsgKGI/LnNjb3JlID8/IDApLCAwKSAvIE1hdGgubWF4KHNjb3Jlcy5sZW5ndGgsIDEpO1xuXG4gIHJldHVybiB7XG4gICAgam9iX2NvdW50LFxuICAgIGNvdXJzZV9jb3VudCxcbiAgICBsYXRlc3RfYWxpZ25tZW50X2F2ZzogTnVtYmVyLmlzRmluaXRlKGF2ZykgPyBOdW1iZXIoYXZnLnRvRml4ZWQoMikpIDogMCxcbiAgICBfc291cmNlOiAnc3VwYWJhc2UnLFxuICB9O1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNLSUxMUyBUT09MUyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cbi8qKlxuICogVG9wIGluLWRlbWFuZCBza2lsbHMgZnJvbSBqb2Jfc2tpbGxzIG92ZXIgYSByZWNlbnQgd2luZG93LlxuICogQXNzdW1lcyBqb2Jfc2tpbGxzKHNraWxsIHRleHQsIGpvYl9pZCB1dWlkLCBjcmVhdGVkX2F0IHRpbWVzdGFtcHR6PykgYW5kIGpvYnMoaWQsIGNyZWF0ZWRfYXQpLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG9wSW5EZW1hbmRTa2lsbHMob3B0cz86IHsgd2luZG93RGF5cz86IG51bWJlcjsgbGltaXQ/OiBudW1iZXI7IG1pbkNvdW50PzogbnVtYmVyIH0pIHtcbiAgY29uc3Qgc3VwYSA9IGdldFN1cGFBZG1pbigpO1xuICBjb25zdCB3aW5kb3dEYXlzID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oMzY1LCBvcHRzPy53aW5kb3dEYXlzID8/IDMwKSk7XG4gIGNvbnN0IGxpbWl0ID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oMTAwLCBvcHRzPy5saW1pdCA/PyAyNSkpO1xuICBjb25zdCBtaW5Db3VudCA9IE1hdGgubWF4KDAsIG9wdHM/Lm1pbkNvdW50ID8/IDApO1xuXG4gIC8vIFByZWZlciBhbiBSUEMgKGZhc3RlciAmIGNsZWFuZXIpLiBJZiB5b3UgYWRkIHRoaXMgaW4gREIsIHVuY29tbWVudCB0aGUgUlBDIGJsb2NrIGFuZCByZW1vdmUgZmFsbGJhY2suXG4gIGNvbnN0IHJwY1RyeSA9IGF3YWl0IHN1cGEucnBjKCd0b3BfaW5fZGVtYW5kX3NraWxscycsIHsgd2luZG93X2RheXM6IHdpbmRvd0RheXMsIHRvcF9saW1pdDogbGltaXQsIG1pbl9jb3VudDogbWluQ291bnQgfSk7XG4gIGlmICghcnBjVHJ5LmVycm9yICYmIHJwY1RyeS5kYXRhKSB7XG4gICAgcmV0dXJuIHsgb2s6IHRydWUsIGl0ZW1zOiBycGNUcnkuZGF0YSwgdmlhOiAncnBjJyB9O1xuICB9XG5cbiAgLy8gRmFsbGJhY2s6IGRvIGl0IHdpdGggUG9zdGdSRVNUIGZpbHRlcnMgKG1heSBiZSBzbG93ZXIgb24gbGFyZ2UgdGFibGVzKS5cbiAgLy8gV2UgY291bnQgc2tpbGxzIG9uIGpvYnMgY3JlYXRlZCBpbiB0aGUgd2luZG93LiBBZGp1c3QgY29sdW1uIG5hbWVzIGlmIG5lZWRlZC5cbiAgY29uc3Qgc2luY2VJU08gPSBuZXcgRGF0ZShEYXRlLm5vdygpIC0gd2luZG93RGF5cyAqIDg2NDAwMDAwKS50b0lTT1N0cmluZygpO1xuXG4gIC8vIFB1bGwgc2tpbGwgY291bnRzIGtleWVkIGJ5IHNraWxsLiBJZiB5b3UgaGF2ZSBhIG1hdGVyaWFsaXplZCB2aWV3LCB1c2UgdGhhdCBpbnN0ZWFkLlxuICBjb25zdCByZXMgPSBhd2FpdCBzdXBhXG4gICAgLmZyb20oJ2pvYl9za2lsbHMnKVxuICAgIC5zZWxlY3QoJ3NraWxsLCBqb2JzIWlubmVyKGNyZWF0ZWRfYXQpJylcbiAgICAuZ3RlKCdqb2JzLmNyZWF0ZWRfYXQnLCBzaW5jZUlTTyk7XG5cbiAgaWYgKHJlcy5lcnJvcikgdGhyb3cgbmV3IEVycm9yKGBqb2Jfc2tpbGxzOiAke3Jlcy5lcnJvci5tZXNzYWdlIHx8ICd1bmtub3duIGVycm9yJ31gKTtcblxuICBjb25zdCBjb3VudHMgPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPigpO1xuICBmb3IgKGNvbnN0IHJvdyBvZiAocmVzLmRhdGEgPz8gW10pIGFzIGFueVtdKSB7XG4gICAgY29uc3QgcyA9IChyb3cuc2tpbGwgPz8gJycpLnRyaW0oKTtcbiAgICBpZiAoIXMpIGNvbnRpbnVlO1xuICAgIGNvdW50cy5zZXQocywgKGNvdW50cy5nZXQocykgPz8gMCkgKyAxKTtcbiAgfVxuICBjb25zdCBpdGVtcyA9IFsuLi5jb3VudHMuZW50cmllcygpXVxuICAgIC5tYXAoKFtza2lsbCwgY291bnRdKSA9PiAoeyBza2lsbCwgY291bnQgfSkpXG4gICAgLmZpbHRlcigocikgPT4gci5jb3VudCA+PSBtaW5Db3VudClcbiAgICAuc29ydCgoYSwgYikgPT4gYi5jb3VudCAtIGEuY291bnQpXG4gICAgLnNsaWNlKDAsIGxpbWl0KTtcblxuICByZXR1cm4geyBvazogdHJ1ZSwgaXRlbXMsIHZpYTogJ2ZhbGxiYWNrJyB9O1xufVxuXG4vKipcbiAqIFNraWxscyBhIGNvdXJzZSB0ZWFjaGVzLCBhbmQgaG93IHRob3NlIG92ZXJsYXAgd2l0aCBjdXJyZW50IGRlbWFuZC5cbiAqIEFzc3VtZXMgY291cnNlX3NraWxscyhjb3Vyc2VfaWQgdXVpZCwgc2tpbGwgdGV4dClcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldENvdXJzZVNraWxsQ292ZXJhZ2Uob3B0czogeyBjb3Vyc2VJZDogc3RyaW5nOyB3aW5kb3dEYXlzPzogbnVtYmVyIH0pIHtcbiAgY29uc3Qgc3VwYSA9IGdldFN1cGFBZG1pbigpO1xuICBjb25zdCB7IGNvdXJzZUlkIH0gPSBvcHRzO1xuICBjb25zdCB3aW5kb3dEYXlzID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oMzY1LCBvcHRzPy53aW5kb3dEYXlzID8/IDMwKSk7XG5cbiAgLy8gMSkgY291cnNlIHNraWxsc1xuICBjb25zdCBjcyA9IGF3YWl0IHN1cGEuZnJvbSgnY291cnNlX3NraWxscycpLnNlbGVjdCgnc2tpbGwnKS5lcSgnY291cnNlX2lkJywgY291cnNlSWQpO1xuICBpZiAoY3MuZXJyb3IpIHRocm93IG5ldyBFcnJvcihgY291cnNlX3NraWxsczogJHtjcy5lcnJvci5tZXNzYWdlIHx8ICd1bmtub3duIGVycm9yJ31gKTtcbiAgY29uc3QgdGF1Z2h0ID0gbmV3IFNldCgoY3MuZGF0YSA/PyBbXSkubWFwKChyOiBhbnkpID0+IChyLnNraWxsID8/ICcnKS50cmltKCkpLmZpbHRlcihCb29sZWFuKSk7XG5cbiAgLy8gMikgdG9wIGRlbWFuZFxuICBjb25zdCB0b3AgPSBhd2FpdCBnZXRUb3BJbkRlbWFuZFNraWxscyh7IHdpbmRvd0RheXMsIGxpbWl0OiAyMDAgfSk7XG4gIGNvbnN0IGRlbWFuZFNldCA9IG5ldyBTZXQoKHRvcC5pdGVtcyA/PyBbXSkubWFwKChyOiBhbnkpID0+IHIuc2tpbGwpKTtcblxuICBjb25zdCBjb3ZlcmVkID0gWy4uLnRhdWdodF0uZmlsdGVyKChzKSA9PiBkZW1hbmRTZXQuaGFzKHMpKTtcbiAgY29uc3QgbWlzc2luZyA9IFsuLi5kZW1hbmRTZXRdLmZpbHRlcigocykgPT4gIXRhdWdodC5oYXMocykpO1xuXG4gIGNvbnN0IGNvdmVyYWdlUGN0ID0gdGF1Z2h0LnNpemUgPyBOdW1iZXIoKChjb3ZlcmVkLmxlbmd0aCAvIHRhdWdodC5zaXplKSAqIDEwMCkudG9GaXhlZCgxKSkgOiAwO1xuXG4gIHJldHVybiB7XG4gICAgb2s6IHRydWUsXG4gICAgY291cnNlSWQsXG4gICAgY291bnRzOiB7IHRhdWdodDogdGF1Z2h0LnNpemUsIGNvdmVyZWQ6IGNvdmVyZWQubGVuZ3RoLCBtaXNzaW5nOiBtaXNzaW5nLmxlbmd0aCB9LFxuICAgIGNvdmVyYWdlUGN0LFxuICAgIGNvdmVyZWRTa2lsbHM6IGNvdmVyZWQsXG4gICAgbWlzc2luZ1NraWxsczogbWlzc2luZyxcbiAgfTtcbn1cblxuLyoqXG4gKiBNaXNzaW5nIGluLWRlbWFuZCBza2lsbHMgZm9yIGEgc3BlY2lmaWMgY291cnNlICh3aXRoIHRocmVzaG9sZHMpLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TWlzc2luZ1NraWxsc0ZvckNvdXJzZShvcHRzOiB7IGNvdXJzZUlkOiBzdHJpbmc7IHdpbmRvd0RheXM/OiBudW1iZXI7IG1pbkNvdW50PzogbnVtYmVyOyBsaW1pdD86IG51bWJlciB9KSB7XG4gIGNvbnN0IHsgY291cnNlSWQgfSA9IG9wdHM7XG4gIGNvbnN0IHdpbmRvd0RheXMgPSBNYXRoLm1heCgxLCBNYXRoLm1pbigzNjUsIG9wdHM/LndpbmRvd0RheXMgPz8gMzApKTtcbiAgY29uc3QgbWluQ291bnQgPSBNYXRoLm1heCgwLCBvcHRzPy5taW5Db3VudCA/PyAzKTtcbiAgY29uc3QgbGltaXQgPSBNYXRoLm1heCgxLCBNYXRoLm1pbigyMDAsIG9wdHM/LmxpbWl0ID8/IDUwKSk7XG5cbiAgY29uc3QgW2NvdmVyYWdlLCB0b3BdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIGdldENvdXJzZVNraWxsQ292ZXJhZ2UoeyBjb3Vyc2VJZCwgd2luZG93RGF5cyB9KSxcbiAgICBnZXRUb3BJbkRlbWFuZFNraWxscyh7IHdpbmRvd0RheXMsIGxpbWl0OiA1MDAsIG1pbkNvdW50IH0pLFxuICBdKTtcblxuICBjb25zdCBtaXNzaW5nUmFua2VkID0gKHRvcC5pdGVtcyA/PyBbXSlcbiAgICAuZmlsdGVyKChyOiBhbnkpID0+IChjb3ZlcmFnZS5taXNzaW5nU2tpbGxzID8/IFtdKS5pbmNsdWRlcyhyLnNraWxsKSlcbiAgICAuc2xpY2UoMCwgbGltaXQpO1xuXG4gIHJldHVybiB7XG4gICAgb2s6IHRydWUsXG4gICAgY291cnNlSWQsXG4gICAgbWlzc2luZzogbWlzc2luZ1JhbmtlZCwgLy8gW3tza2lsbCwgY291bnR9XVxuICAgIGNvdmVyYWdlUGN0OiBjb3ZlcmFnZS5jb3ZlcmFnZVBjdCxcbiAgfTtcbn1cblxuLyoqXG4gKiBBbGlnbm1lbnQgc3VtbWFyeSBmb3IgYSBjb3Vyc2Ugb3IgZ2xvYmFsbHkuXG4gKiBBc3N1bWVzIGNvdXJzZV9hbGlnbm1lbnRfc2NvcmVzKGNvdXJzZV9pZCwgc2NvcmUsIGNhbGN1bGF0ZWRfYXQpXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGlnbm1lbnRTdW1tYXJ5KG9wdHM/OiB7IGNvdXJzZUlkPzogc3RyaW5nOyB3aW5kb3dEYXlzPzogbnVtYmVyIH0pIHtcbiAgY29uc3Qgc3VwYSA9IGdldFN1cGFBZG1pbigpO1xuICBjb25zdCB3aW5kb3dEYXlzID0gTWF0aC5tYXgoMSwgTWF0aC5taW4oMzY1LCBvcHRzPy53aW5kb3dEYXlzID8/IDkwKSk7XG4gIGNvbnN0IHNpbmNlSVNPID0gbmV3IERhdGUoRGF0ZS5ub3coKSAtIHdpbmRvd0RheXMgKiA4NjQwMDAwMCkudG9JU09TdHJpbmcoKTtcblxuICBsZXQgcSA9IHN1cGFcbiAgICAuZnJvbSgnY291cnNlX2FsaWdubWVudF9zY29yZXMnKVxuICAgIC5zZWxlY3QoJ2NvdXJzZV9pZCxzY29yZSxjYWxjdWxhdGVkX2F0JylcbiAgICAuZ3RlKCdjYWxjdWxhdGVkX2F0Jywgc2luY2VJU08pXG4gICAgLm9yZGVyKCdjYWxjdWxhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pO1xuXG4gIGlmIChvcHRzPy5jb3Vyc2VJZCkgcSA9IHEuZXEoJ2NvdXJzZV9pZCcsIG9wdHMuY291cnNlSWQpO1xuXG4gIGNvbnN0IHJlcyA9IGF3YWl0IHE7XG4gIGlmIChyZXMuZXJyb3IpIHRocm93IG5ldyBFcnJvcihgY291cnNlX2FsaWdubWVudF9zY29yZXM6ICR7cmVzLmVycm9yLm1lc3NhZ2UgfHwgJ3Vua25vd24gZXJyb3InfWApO1xuXG4gIGNvbnN0IHJvd3MgPSByZXMuZGF0YSA/PyBbXTtcbiAgaWYgKG9wdHM/LmNvdXJzZUlkKSB7XG4gICAgY29uc3QgYXZnID1cbiAgICAgIHJvd3MucmVkdWNlKChhLCByOiBhbnkpID0+IGEgKyAoci5zY29yZSA/PyAwKSwgMCkgLyBNYXRoLm1heChyb3dzLmxlbmd0aCwgMSk7XG4gICAgcmV0dXJuIHsgb2s6IHRydWUsIGNvdXJzZUlkOiBvcHRzLmNvdXJzZUlkLCBhdmc6IE51bWJlcihhdmcudG9GaXhlZCgyKSksIG46IHJvd3MubGVuZ3RoIH07XG4gIH1cblxuICAvLyBnbG9iYWwgcGVyLWNvdXJzZSBhdmdcbiAgY29uc3QgbWFwID0gbmV3IE1hcDxzdHJpbmcsIHsgc3VtOiBudW1iZXI7IG46IG51bWJlciB9PigpO1xuICBmb3IgKGNvbnN0IHIgb2Ygcm93cyBhcyBhbnlbXSkge1xuICAgIGNvbnN0IGsgPSBTdHJpbmcoci5jb3Vyc2VfaWQgPz8gJycpO1xuICAgIGNvbnN0IG0gPSBtYXAuZ2V0KGspID8/IHsgc3VtOiAwLCBuOiAwIH07XG4gICAgbS5zdW0gKz0gci5zY29yZSA/PyAwO1xuICAgIG0ubiArPSAxO1xuICAgIG1hcC5zZXQoaywgbSk7XG4gIH1cbiAgY29uc3QgaXRlbXMgPSBbLi4ubWFwLmVudHJpZXMoKV0ubWFwKChbY291cnNlSWQsIHsgc3VtLCBuIH1dKSA9PiAoe1xuICAgIGNvdXJzZUlkLFxuICAgIGF2ZzogTnVtYmVyKChzdW0gLyBNYXRoLm1heChuLCAxKSkudG9GaXhlZCgyKSksXG4gICAgbixcbiAgfSkpO1xuICBpdGVtcy5zb3J0KChhLCBiKSA9PiBiLmF2ZyAtIGEuYXZnKTtcbiAgcmV0dXJuIHsgb2s6IHRydWUsIGl0ZW1zIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRyeUxvYWREYXRhU2VydmljZSgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBtb2QgPSAoYXdhaXQgaW1wb3J0KCcuLi8uLi8uLi9saWIvZGF0YVNlcnZpY2UnKSkgYXMgYW55O1xuICAgIHJldHVybiBtb2Q7XG4gIH0gY2F0Y2gge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRJbkRlbWFuZFNraWxsc1ZpYVNlcnZpY2Uob3B0cz86IHsgd2luZG93RGF5cz86IG51bWJlcjsgbGltaXQ/OiBudW1iZXI7IG1pbkNvdW50PzogbnVtYmVyIH0pIHtcbiAgY29uc3Qgc3ZjID0gYXdhaXQgdHJ5TG9hZERhdGFTZXJ2aWNlKCk7XG4gIGlmIChzdmM/LmdldEluRGVtYW5kU2tpbGxzKSByZXR1cm4gc3ZjLmdldEluRGVtYW5kU2tpbGxzKG9wdHMgPz8ge30pO1xuICAvLyBGYWxsYmFjayB0byBvdXIgREIgbWV0aG9kXG4gIHJldHVybiBnZXRUb3BJbkRlbWFuZFNraWxscyhvcHRzKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1pc3NpbmdTa2lsbHNGb3JDb3Vyc2VWaWFTZXJ2aWNlKG9wdHM6IHsgY291cnNlSWQ6IHN0cmluZzsgd2luZG93RGF5cz86IG51bWJlcjsgbWluQ291bnQ/OiBudW1iZXI7IGxpbWl0PzogbnVtYmVyIH0pIHtcbiAgY29uc3Qgc3ZjID0gYXdhaXQgdHJ5TG9hZERhdGFTZXJ2aWNlKCk7XG4gIGlmIChzdmM/LmdldE1pc3NpbmdTa2lsbHNGb3JDb3Vyc2UpIHJldHVybiBzdmMuZ2V0TWlzc2luZ1NraWxsc0ZvckNvdXJzZShvcHRzKTtcbiAgcmV0dXJuIGdldE1pc3NpbmdTa2lsbHNGb3JDb3Vyc2Uob3B0cyk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRDb3Vyc2VTa2lsbENvdmVyYWdlVmlhU2VydmljZShvcHRzOiB7IGNvdXJzZUlkOiBzdHJpbmc7IHdpbmRvd0RheXM/OiBudW1iZXIgfSkge1xuICBjb25zdCBzdmMgPSBhd2FpdCB0cnlMb2FkRGF0YVNlcnZpY2UoKTtcbiAgaWYgKHN2Yz8uZ2V0Q291cnNlU2tpbGxDb3ZlcmFnZSkgcmV0dXJuIHN2Yy5nZXRDb3Vyc2VTa2lsbENvdmVyYWdlKG9wdHMpO1xuICByZXR1cm4gZ2V0Q291cnNlU2tpbGxDb3ZlcmFnZShvcHRzKTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJnZXRTdXBhQWRtaW4iLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwia2V5IiwiU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSIsIkVycm9yIiwiYXV0aCIsInBlcnNpc3RTZXNzaW9uIiwiZ2V0TGF0ZXN0S1BJcyIsInN1cGEiLCJqb2JzSGVhZCIsImNvdXJzZXNIZWFkIiwic2NvcmVzUmVzIiwiUHJvbWlzZSIsImFsbCIsImZyb20iLCJzZWxlY3QiLCJoZWFkIiwiY291bnQiLCJvcmRlciIsImFzY2VuZGluZyIsImxpbWl0IiwiZXJyb3IiLCJtZXNzYWdlIiwiam9iX2NvdW50IiwiY291cnNlX2NvdW50Iiwic2NvcmVzIiwiZGF0YSIsImF2ZyIsInJlZHVjZSIsImEiLCJiIiwic2NvcmUiLCJNYXRoIiwibWF4IiwibGVuZ3RoIiwibGF0ZXN0X2FsaWdubWVudF9hdmciLCJOdW1iZXIiLCJpc0Zpbml0ZSIsInRvRml4ZWQiLCJfc291cmNlIiwiZ2V0VG9wSW5EZW1hbmRTa2lsbHMiLCJvcHRzIiwid2luZG93RGF5cyIsIm1pbiIsIm1pbkNvdW50IiwicnBjVHJ5IiwicnBjIiwid2luZG93X2RheXMiLCJ0b3BfbGltaXQiLCJtaW5fY291bnQiLCJvayIsIml0ZW1zIiwidmlhIiwic2luY2VJU08iLCJEYXRlIiwibm93IiwidG9JU09TdHJpbmciLCJyZXMiLCJndGUiLCJjb3VudHMiLCJNYXAiLCJyb3ciLCJzIiwic2tpbGwiLCJ0cmltIiwic2V0IiwiZ2V0IiwiZW50cmllcyIsIm1hcCIsImZpbHRlciIsInIiLCJzb3J0Iiwic2xpY2UiLCJnZXRDb3Vyc2VTa2lsbENvdmVyYWdlIiwiY291cnNlSWQiLCJjcyIsImVxIiwidGF1Z2h0IiwiU2V0IiwiQm9vbGVhbiIsInRvcCIsImRlbWFuZFNldCIsImNvdmVyZWQiLCJoYXMiLCJtaXNzaW5nIiwiY292ZXJhZ2VQY3QiLCJzaXplIiwiY292ZXJlZFNraWxscyIsIm1pc3NpbmdTa2lsbHMiLCJnZXRNaXNzaW5nU2tpbGxzRm9yQ291cnNlIiwiY292ZXJhZ2UiLCJtaXNzaW5nUmFua2VkIiwiaW5jbHVkZXMiLCJnZXRBbGlnbm1lbnRTdW1tYXJ5IiwicSIsInJvd3MiLCJuIiwiayIsIlN0cmluZyIsImNvdXJzZV9pZCIsIm0iLCJzdW0iLCJ0cnlMb2FkRGF0YVNlcnZpY2UiLCJtb2QiLCJnZXRJbkRlbWFuZFNraWxsc1ZpYVNlcnZpY2UiLCJzdmMiLCJnZXRJbkRlbWFuZFNraWxscyIsImdldE1pc3NpbmdTa2lsbHNGb3JDb3Vyc2VWaWFTZXJ2aWNlIiwiZ2V0Q291cnNlU2tpbGxDb3ZlcmFnZVZpYVNlcnZpY2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/carly/tools.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?7f96":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?8cce":
/*!********************************!*\
  !*** supports-color (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?d1cc":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/isows","vendor-chunks/google-auth-library","vendor-chunks/uuid","vendor-chunks/zod","vendor-chunks/gaxios","vendor-chunks/jws","vendor-chunks/debug","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/https-proxy-agent","vendor-chunks/gcp-metadata","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/agent-base","vendor-chunks/node-fetch","vendor-chunks/@google","vendor-chunks/safe-buffer","vendor-chunks/ms","vendor-chunks/jwa","vendor-chunks/is-stream","vendor-chunks/gtoken","vendor-chunks/extend","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcarly%2Froute&page=%2Fapi%2Fcarly%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcarly%2Froute.ts&appDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fstal%2FDocuments%2FProjects%2Fcurricalign%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();